name: release

on:
  push:
    branches: [deploy]
    tags: [v*]
  workflow_dispatch:

jobs:
  build-sdist:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build ".[test,doc]"

    - name: Test with pytest
      env:
        PY_COLORS: 1 # forcibly enable pytest colors
      run: pytest

    - name: Build sdist
      run: |
        git clean -fxd
        make man
        make sdist

    - name: Output dist file info
      run: |
        tar -ztf dist/*.tar.gz | sort

    - name: Upload sdist artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*.tar.gz


  build-wheel:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build wheels
      uses: joerick/cibuildwheel@v2.10.0
      with:
        output-dir: dist
      env:
        CIBW_BUILD: cp310-*
        CIBW_ARCHS_LINUX: x86_64
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
        CIBW_BEFORE_BUILD: "{project}/.github/workflows/manylinux.sh && pip install '{project}'"
        CIBW_BEFORE_TEST: pip install '{project}[test]'
        CIBW_TEST_COMMAND: pytest {project}/tests

    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*.whl


  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["build-sdist", "build-wheel"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        print_hash: true

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.tar.gz
        fail_on_unmatched_files: true
